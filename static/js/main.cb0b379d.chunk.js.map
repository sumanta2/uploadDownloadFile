{"version":3,"sources":["ShowData.jsx","StoreData.jsx","component/reactcontact.js","Firebase.jsx","UploadImage.jsx","actions/index.jsx","App.js","reportWebVitals.js","reducers/manageData.jsx","reducers/index.jsx","store.jsx","index.js"],"names":["pStyle","width","height","marginLeft","marginRight","marginBottom","color","backgroundColor","borderRadius","ShowData","id","name","url","fileName","fileType","className","style","href","target","download","StoreData","value","Object","entries","map","imgUrl","Reactcontact","getData","setData","setProgress","imageData","storeData","process","useState","user","setuser","setMyValue","myState","useSelector","state","changeUrl","useEffect","getdata","a","fetch","result","json","data","console","log","postData","e","preventDefault","method","headers","body","JSON","stringify","Date","getTime","toString","type","res","setTimeout","alert","mar","margin","float","placeholder","onChange","event","preval","autoComplete","required","onClick","disabled","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","UploadImage","myData","getProgress","setImageData","setImage","getUrl","setUrl","dispatch","useDispatch","filePickerRef","useRef","payload","Math","abs","display","ref","files","put","on","snapshot","round","bytesTransferred","totalBytes","err","child","getDownloadURL","then","imageUrl","upLoadImage","current","click","App","checkProgress","setcheckProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb0b379d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {saveAs} from 'file-saver'\r\n// import { FiDownload } from \"react-icons/fi\";\r\nimport { AiOutlineEye } from \"react-icons/ai\";\r\nimport './styles/ShowData.css'\r\n\r\nconst myStyle={\r\n    display:\"inline-block\",\r\n}\r\n\r\nconst pStyle={\r\n    width:\"270px\",\r\n    height:\"31px\",\r\n    marginLeft:\"0.5em\",\r\n    marginRight:\"0.5em\",\r\n    marginBottom :\"0.5em\",\r\n    color:\"#461b1b\",\r\n    backgroundColor:\"rgb(0 0 0 / 20%)\",\r\n    borderRadius:\"5px\",\r\n}\r\n\r\nconst ShowData = ({ id, name, url,fileName,fileType }) => {\r\n\r\n    // const myDownload=()=>{\r\n    //     var blob = new Blob([url],{type: \"application/text\"});\r\n\r\n    //     saveAs(blob, `${fileName}`);\r\n    // }\r\n    const showContent=()=>{\r\n            saveAs(url)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={id} className='dataContainer'>\r\n                <p style={pStyle}>{fileName}</p>\r\n                <div className='d-flex justify-content-around align-items-center myPointer'>\r\n                    <h5>Owner: {name}</h5>  \r\n                <div>\r\n                   <a href={url} target=\"_blank\" download ><AiOutlineEye/></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ShowData;","import React from 'react';\r\nimport ShowData from './ShowData';\r\n\r\n\r\nconst StoreData=({value})=>{\r\n    return(\r\n    <>  \r\n        <div className='d-flex flex-row flex-wrap justify-content-center m-4'>\r\n        {\r\n            value!= null &&\r\n        (Object.entries(value).map(([key,{id,imgUrl,name,fileName,fileType}])=>{  //this method i see sunny singha youtube channel hulu clone video's 1:06:40  part\r\n           return   <ShowData key={id} name={name} url={imgUrl} fileName={fileName} fileType={fileType}/>  \r\n        }))}\r\n        {value == null && <p>No Data found</p>}\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default StoreData;\r\n","import React, { useEffect, useState } from 'react';\r\nimport StoreData from '../StoreData';\r\nimport { useSelector } from \"react-redux\";\r\nimport 'bootstrap';\r\nimport '../../src/styles/reactcontact.css'\r\n\r\nconst Reactcontact = ({ getData, setData, setProgress , imageData}) => {\r\n\r\n    const storeData=process.env.REACT_APP_storeData\r\n    const [user, setuser] = useState({\r\n        name: '',\r\n    });\r\n\r\n    const [value, setMyValue] = useState({})\r\n\r\n    const myState = useSelector((state) =>\r\n        (state.changeUrl));\r\n\r\n    useEffect(() => {\r\n        getdata()\r\n    }, [])\r\n\r\n    const getdata = async () => {\r\n        try {\r\n            const result = await fetch(storeData)\r\n            // console.log(result)\r\n            const data = await result.json()\r\n            setMyValue(data)\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error to fetch All Data\")\r\n        }\r\n    }\r\n    const getUserData = (event) => {\r\n        const { name, value } = event.target;\r\n        setuser((preval) => {\r\n            return {\r\n                ...preval,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    const postData = async (e) => {\r\n        e.preventDefault()\r\n        setProgress(0);\r\n        const { name } = user;\r\n        if (name && myState) {\r\n            try {\r\n                const res = await fetch(storeData, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",   //here using fetch api and post request we connect to the firebase database and send json data.The URL(first parameter value of the fetch method) get from firebase server and edit some place in this url \r\n                    },\r\n                    body: JSON.stringify({\r\n                        id: new Date().getTime().toString(),\r\n                        name: user.name,\r\n                        imgUrl: myState,\r\n                        fileName:imageData.name,\r\n                        fileType:imageData.type,\r\n                    })\r\n                }\r\n                );\r\n                setTimeout(()=>{\r\n                    setData(true)\r\n                },2000)\r\n                if (res) {\r\n                    alert(\"Data inserted successfully\")\r\n                    setuser({\r\n                        name: '',\r\n                    })\r\n                    getdata()\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(\"Error for server side\")\r\n            }\r\n        }\r\n        else if (myState == \"\") {\r\n            alert(\"image was not upload properly please wait a while\")\r\n        }\r\n        else {\r\n            alert(\"Blank data not allowed/Please wait for properly upload the image\")\r\n        }\r\n    }\r\n\r\n\r\n    const mar = {\r\n        margin: \"10px\",\r\n    }\r\n    return (\r\n        <>\r\n            <form className=\"myForm myStyle\"  method='POST'>\r\n                <h3>Enter Details</h3>\r\n\r\n                <div className=\"\" style={mar}>\r\n                    <span style={{float:\"left\"}}>Owner</span>\r\n                    <input className='inputStyle' style={{width:\"170px\",marginLeft:\"33px\"}} type='text' name='name' placeholder=\"Enter your name\" value={user.name} onChange={getUserData} autoComplete=\"off\" required />\r\n                </div>\r\n\r\n                <div className=\"\" style={mar}>\r\n                    <button className=\"btn btn-outline-success\" onClick={postData} disabled={getData}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <StoreData value={value} />\r\n        </>\r\n    )\r\n}\r\nexport default Reactcontact;\r\n\r\n// {\r\n//   \"rules\": {\r\n//     \".read\": \"now < 1636828200000\",  // 2021-11-14\r\n//     \".write\": \"now < 1636828200000\",  // 2021-11-14\r\n//   }\r\n// }","import firebase from 'firebase';\r\n\r\n\r\n//connection string to connect firebase server\r\nconst firebaseConfig = {\r\n    apiKey:process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    databaseURL: process.env.REACT_APP_databaseURL,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId:process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nvar storage = firebase.storage();\r\n\r\n\r\nexport default storage\r\n","import React, { useEffect, useState,useRef } from 'react'\r\nimport storage from './Firebase'\r\n// import  {getMetadata}  from \"firebase/storage\";\r\nimport {getData} from './actions/index'\r\nimport { useDispatch } from \"react-redux\";\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport { BsFillFileEarmarkImageFill } from \"react-icons/bs\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\n\r\nconst UploadImage = ({myData, getProgress, setProgress, setImageData}) => {\r\n    const [image, setImage] = useState()\r\n    const [getUrl,setUrl]=useState(\"\");\r\n\r\nconst dispatch=useDispatch()\r\n\r\nconst filePickerRef=useRef()\r\n\r\n    useEffect(()=>{\r\n        dispatch(getData(getUrl))\r\n                \r\n    },[getUrl])\r\n\r\n    const upLoadImage=(e)=>{ \r\n\r\n        setImage(e.target.files[0]);\r\n        setImageData({name:e.target.files[0].name,type:e.target.files[0].type})\r\n\r\n        const uploadImage=storage.ref(e.target.files[0].name).put(e.target.files[0]);\r\n        uploadImage.on(\"state_changed\",(snapshot)=>{setProgress(Math.round((snapshot.bytesTransferred/snapshot.totalBytes)*100)-1)},(err)=>{console.log(err)},\r\n        ()=>{\r\n            storage.ref().child(e.target.files[0].name).getDownloadURL().then((imageUrl)=>{\r\n                setProgress(100)\r\n                myData(false);\r\n                setUrl(imageUrl)\r\n            })\r\n\r\n        })\r\n        // setTimeout(()=>{   //this method used for testing purpose\r\n        //     console.log(\"Hello\")  \r\n        //     setProgress(100)\r\n        //     myData(false)\r\n        // },1000)\r\n\r\n    }\r\n\r\n    const upload = () => \r\n    {  \r\n        filePickerRef.current.click()\r\n        if (image == null)\r\n            return;\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Upload Files</h1>\r\n\r\n            <div style={{\"height\":\"40px\"}}>\r\n                {(getProgress != 0) &&   <h3>{`Your uploading progress is ${Math.abs(getProgress)} `}</h3> }\r\n            </div>\r\n            {/* #Error! Progress-bar are not working here */}\r\n            {/* {getUrl && <img src={getUrl} style={{width:\"300px\",height:\"200px \"}} alt=\"Upload\"/>}<br></br> */}\r\n            <input type=\"file\" style={{display:'none'}} ref={filePickerRef} onChange={(e) => { upLoadImage(e) }} />\r\n            \r\n            <button className='btn btn-outline-success m-4' onClick={upload}> <BsFillFileEarmarkImageFill/></button>\r\n        </>\r\n    )\r\n}\r\nexport default UploadImage;\r\n\r\n","export const getData=(num)=>{\r\n    return(\r\n        {type:\"ShowData\",\r\n        payload:num}     //here we pass payload property  because we pass/use parameter value \r\n    )\r\n}","import './App.css';\nimport Reactcontact from './component/reactcontact';\nimport UploadImage from './UploadImage';\n\n// import { useSelector } from \"react-redux\";   \nimport { useState } from 'react';\n\nfunction App() {\n  const [checkProgress,setcheckProgress]=useState(true)\n  const [getProgress,setProgress]=useState(0);\n  const [imageData,setImageData]=useState({name:\"\",type:\"\"})\n\n  // const [fileName,setFileName]=useState(\"suman\")\n\n  return (\n    <div className=\"App\">\n       <UploadImage myData={setcheckProgress} getProgress={getProgress} setProgress={setProgress} setImageData={setImageData}/>\n\n       <Reactcontact getData={checkProgress} setData={setcheckProgress} setProgress={setProgress} imageData={imageData}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","var initialState=\"\"\r\nconst changeUrl=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case \"ShowData\" :return action.payload;  \r\n        default :return state;\r\n    }\r\n}\r\nexport default changeUrl;\r\n","import changeUrl from \"./manageData\";//here import the upDown file which is a reducer\r\n\r\n import  {combineReducers} from \"redux\"; //it help to combine multiple reducer Here use only one reducer\r\n\r\nconst rootReducer=combineReducers({\r\n    changeUrl:changeUrl\r\n});\r\n\r\nexport default rootReducer;","import {createStore} from \"redux\";\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\nconst store=createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {Provider} from \"react-redux\";\n\n// store.subscribe(()=>{console.log(store.getState())})   it display the content of the redux store\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>   {/* using provider tag we pass the store object(centralized data) so that this data we easily access for app or it child component */}\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}